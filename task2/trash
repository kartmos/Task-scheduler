activtreadGen := 0
	for item := range inputSlice {
		for {
			routineLockGen.Lock()
			if activtreadGen < treadsGen {
				activtreadGen++
				routineLockGen.Unlock()
				signalGeneration.Add(1)
				go generator(&item, outputSlice, &signalGeneration, &activtreadGen)
			} else {
				routineLockGen.Unlock()
				break
			}
		}
	}
	activtreadSum := 0
	for item := range outputSlice {
		for {
			routineLockSum.Lock()
			if activtreadSum < treadsSum {
				activtreadSum++
				routineLockSum.Unlock()
				signalSummarize.Add(1)
				go summarize(item, inputSum, &signalSummarize, &activtreadSum)
			} else {
				routineLockSum.Unlock()
				break
			}
		}
	}